[{"C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\index.tsx":"1","C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\App.tsx":"2","C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\components\\scheduler.tsx":"3","C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\db\\appointments.ts":"4","C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\db\\resources.ts":"5","C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\services\\reservations.ts":"6"},{"size":220,"mtime":1612155692176,"results":"7","hashOfConfig":"8"},{"size":217,"mtime":1612155300715,"results":"9","hashOfConfig":"8"},{"size":7008,"mtime":1612155566312,"results":"10","hashOfConfig":"8"},{"size":3754,"mtime":1611723395970,"results":"11","hashOfConfig":"8"},{"size":400,"mtime":1611907726621,"results":"12","hashOfConfig":"8"},{"size":964,"mtime":1611904593132,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n32v22",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},"C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\index.tsx",[],"C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\App.tsx",[],"C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\components\\scheduler.tsx",["28","29","30","31","32"],"C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\db\\appointments.ts",[],"C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\db\\resources.ts",[],[],"C:\\Umidjon\\KAIST\\Hacktoberfest\\schedulerFrontend\\scheduler\\src\\services\\reservations.ts",["33","34","35","36"],"import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/status'\r\n\r\nexport interface ReservationsAttributes {\r\n    id?: number;\r\n    title: string;\r\n    location:string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    notes:string;\r\n  }\r\n  const getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = (newObject:ReservationsAttributes) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id:number, newObject:ReservationsAttributes) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const deleteReservation = (id:number) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  export default { getAll, create, update, delete:deleteReservation }",{"ruleId":"37","severity":1,"message":"38","line":85,"column":40,"nodeType":"39","messageId":"40","endLine":85,"endColumn":50},{"ruleId":"41","severity":1,"message":"42","line":137,"column":54,"nodeType":"43","messageId":"44","endLine":137,"endColumn":57,"suggestions":"45"},{"ruleId":"41","severity":1,"message":"42","line":140,"column":58,"nodeType":"43","messageId":"44","endLine":140,"endColumn":61,"suggestions":"46"},{"ruleId":"41","severity":1,"message":"42","line":143,"column":56,"nodeType":"43","messageId":"44","endLine":143,"endColumn":59,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":150,"column":16,"nodeType":"50","messageId":"51","endLine":150,"endColumn":22},{"ruleId":"52","severity":1,"message":"53","line":12,"column":18,"nodeType":"54","messageId":"55","endLine":12,"endColumn":23},{"ruleId":"52","severity":1,"message":"53","line":17,"column":18,"nodeType":"54","messageId":"55","endLine":17,"endColumn":55},{"ruleId":"52","severity":1,"message":"53","line":22,"column":18,"nodeType":"54","messageId":"55","endLine":22,"endColumn":66},{"ruleId":"52","severity":1,"message":"53","line":27,"column":29,"nodeType":"54","messageId":"55","endLine":27,"endColumn":43},"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["56","57"],["58","59"],["60","61"],"@typescript-eslint/no-unused-vars","'allDay' is assigned a value but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType",{"messageId":"62","fix":"63","desc":"64"},{"messageId":"65","fix":"66","desc":"67"},{"messageId":"62","fix":"68","desc":"64"},{"messageId":"65","fix":"69","desc":"67"},{"messageId":"62","fix":"70","desc":"64"},{"messageId":"65","fix":"71","desc":"67"},"suggestUnknown",{"range":"72","text":"73"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"72","text":"74"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"75","text":"73"},{"range":"75","text":"74"},{"range":"76","text":"73"},{"range":"76","text":"74"},[4401,4404],"unknown","never",[4516,4519],[4634,4637]]